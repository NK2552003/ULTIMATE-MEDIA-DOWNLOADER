name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v2.0.0'

env:
  PYTHON_VERSION: '3.11'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            ext: ''
          - os: windows-latest
            platform: windows
            ext: '.exe'
          - os: macos-latest
            platform: macos
            ext: ''

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgconf-2-4 libxss1 libxtst6 libxrandr2 libasound2 libpangocairo-1.0-0 libatk1.0-0 libcairo-gobject2 libgtk-3-0 libgdk-pixbuf2.0-0

    - name: Create executable with PyInstaller
      run: |
        pyinstaller ultimate_downloader.spec

    - name: Rename executable
      run: |
        mv dist/ultimate-downloader${{ matrix.ext }} dist/ultimate-downloader-${{ matrix.platform }}-v2.0.0${{ matrix.ext }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ultimate-downloader-${{ matrix.platform }}-v2.0.0
        path: dist/ultimate-downloader-${{ matrix.platform }}-v2.0.0${{ matrix.ext }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -la artifacts/

    - name: Upload binaries to release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}